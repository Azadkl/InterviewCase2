import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;
import java.util.HashMap; // Benim eklediklerim

class Result {
    public static int uniqueWolfs(List<Integer> arr) {
        // Geliştirmeyi bu alana yapınız
        Map<Integer, Integer> turMap = new HashMap<>();
        int maxTur = 0;
        int minID = Integer.MAX_VALUE;

        // Listenin boyutunu alma
        for (int i = 0; i < arr.size(); i++) {
            int kurtID = arr.get(i);
            int tur = turMap.getOrDefault(kurtID, 0) + 1;
            // Key&Value
            turMap.put(kurtID, tur);
        }

        for (Map.Entry<Integer, Integer> entry : turMap.entrySet()) {
            int kurtID = entry.getKey();
            int tur = entry.getValue();

            if (tur > maxTur) {
                maxTur = tur;
                minID = kurtID;
            } else if (tur == maxTur && kurtID < minID) {
                minID = kurtID;
            }
        }

        return minID;
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        System.out.println("Kurt türlerini girin (boşlukla yazınız):");//ekleme yaptım
        String[] arrItems = bufferedReader.readLine().replaceAll("\\s+$", "").split(" ");//Değiştirdim
        List<Integer> arr = Arrays.stream(arrItems)
                .map(Integer::parseInt)
                .collect(Collectors.toList());

        int result = Result.uniqueWolfs(arr);

        //Değiştirdim
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter("output.txt"));

        bufferedWriter.write(String.valueOf(result));
        bufferedWriter.newLine();

        System.out.println("En çok tespit edilen en düşük ID: " + result);//ekleme yaptım

        bufferedReader.close();
        bufferedWriter.close();
    }
}
